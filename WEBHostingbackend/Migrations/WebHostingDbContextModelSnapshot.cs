// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WEBHostingbackend.Repository;

#nullable disable

namespace WEBHostingbackend.Migrations
{
    [DbContext(typeof(WebHostingDbContext))]
    partial class WebHostingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.Commande", b =>
                {
                    b.Property<int>("IdCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_commande");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCommande"), 1L, 1);

                    b.Property<string>("Etat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("etat");

                    b.Property<int>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("id_client");

                    b.Property<int>("IdDomaine")
                        .HasColumnType("int")
                        .HasColumnName("id_domaine");

                    b.Property<int>("IdPayement")
                        .HasColumnType("int")
                        .HasColumnName("id_payement");

                    b.Property<string>("MsgErreur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("msg_erreur");

                    b.HasKey("IdCommande");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdDomaine");

                    b.ToTable("Commande");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.Domain", b =>
                {
                    b.Property<int>("IdDomain")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_domain");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDomain"), 1L, 1);

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("date")
                        .HasColumnName("date_creation");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("domainName");

                    b.Property<string>("HebergementType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("hebergement_type");

                    b.Property<int?>("IdDeBase")
                        .HasColumnType("int")
                        .HasColumnName("id_de_base");

                    b.Property<string>("Root")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("root");

                    b.HasKey("IdDomain");

                    b.ToTable("Domain");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.Payement", b =>
                {
                    b.Property<int>("IdPayement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPayement");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayement"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("IdPayement");

                    b.HasIndex("IdUser");

                    b.ToTable("Payement");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.Serveur", b =>
                {
                    b.Property<int>("IdServeur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_serveur");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServeur"), 1L, 1);

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("host_name");

                    b.Property<int>("NbAutorisé")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("nb_autorisé");

                    b.Property<string>("PlateformeType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("plateforme_type");

                    b.Property<int>("Prix")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("prix");

                    b.HasKey("IdServeur");

                    b.ToTable("Serveur");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.Service", b =>
                {
                    b.Property<int>("IdService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_service");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdService"), 1L, 1);

                    b.Property<string>("EspaceDisque")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("espace_disque");

                    b.Property<int?>("NbEmail")
                        .HasColumnType("int")
                        .HasColumnName("nb_email");

                    b.Property<string>("Prix")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("prix");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("service_Name");

                    b.Property<string>("TraficMesuel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("trafic_mesuel");

                    b.Property<string>("TypeHebergement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_hebergement");

                    b.HasKey("IdService");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Entreprise")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Etat")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("idRole");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Téléphone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUser")
                        .HasName("PK_User");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.UserRole", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRole");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"), 1L, 1);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRole");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.Commande", b =>
                {
                    b.HasOne("WEBHostingbackend.Repository.Models.User", "IdClientNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_Commande_User");

                    b.HasOne("WEBHostingbackend.Repository.Models.Domain", "IdDomaineNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("IdDomaine")
                        .IsRequired()
                        .HasConstraintName("FK_Commande_domaine");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdDomaineNavigation");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.Payement", b =>
                {
                    b.HasOne("WEBHostingbackend.Repository.Models.User", "IdUserNavigation")
                        .WithMany("Payements")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Payement_User");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.User", b =>
                {
                    b.HasOne("WEBHostingbackend.Repository.Models.UserRole", "IdRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_User_UserRole");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.Domain", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.User", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Payements");
                });

            modelBuilder.Entity("WEBHostingbackend.Repository.Models.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
